[gd_scene load_steps=21 format=2]

[ext_resource path="res://core/player_boat/PlayerBoat.tscn" type="PackedScene" id=1]
[ext_resource path="res://core/ui/hud/HUD.tscn" type="PackedScene" id=2]
[ext_resource path="res://core/env_models/Jetty.tscn" type="PackedScene" id=3]
[ext_resource path="res://core/env_models/HouseRed.tscn" type="PackedScene" id=4]
[ext_resource path="res://terrain/t_data/data.hterrain" type="Resource" id=5]
[ext_resource path="res://addons/zylann.hterrain/hterrain.gd" type="Script" id=6]
[ext_resource path="res://addons/zylann.hterrain/hterrain_texture_set.gd" type="Script" id=7]
[ext_resource path="res://core/fish_spawn/FishSpawn.tscn" type="PackedScene" id=8]
[ext_resource path="res://core/env_models/Shark.tscn" type="PackedScene" id=9]

[sub_resource type="PlaneMesh" id=1]
size = Vector2( 128, 128 )
subdivide_width = 1
subdivide_depth = 1

[sub_resource type="Shader" id=8]
code = "shader_type spatial;
render_mode specular_phong, cull_disabled;

uniform float speed: hint_range(-1, 1) = 0.0;

uniform sampler2D noise1;
uniform sampler2D noise2;
uniform sampler2D normalmap: hint_normal;

uniform vec4 color : hint_color;
uniform vec4 deep_water: hint_color;

//depth-fade var
uniform float beer_law_factor = 2.0;
uniform float _distance = 0.0;

//foam var
uniform vec4 edge_color: hint_color;
uniform float edge_scale = 0.25;
uniform float near = 0.1;
uniform float far = 100f;

// wave var
uniform vec2 wave_strength = vec2(0.5, 0.25);
uniform vec2 wave_frequ = vec2(12.0, 12.0);
uniform vec2 time_factor = vec2(1.0, 2.0);

float waves(vec2 pos, float time) {
	return (wave_strength.y * sin(pos.y * wave_frequ.y + time * time_factor.y)) + (wave_strength.x * sin(pos.x * wave_frequ.x + time * time_factor.x));
}

void vertex() {
	VERTEX.y += waves(VERTEX.xy, TIME);
}

float rim(float depth) {
	depth = 2f * depth - 1f;
	return near * far / (far + depth * (near - far));
}

float calc_depth_fade(float depth, mat4 projection_matrix, 
						vec4 fragcoord, float beer_factor, float __distance, vec3 vertex) {
	
	float scene_depth = depth;

	scene_depth = scene_depth * 2.0 - 1.0;
	scene_depth = projection_matrix[3][2] / (scene_depth + projection_matrix[2][2]);
	scene_depth = scene_depth + vertex.z; // z is negative
	
	// application of beers law
	scene_depth = exp(-scene_depth * beer_factor);
	
	float screen_depth = fragcoord.z;
	
	float depth_fade = (scene_depth - screen_depth) / __distance;
	
	depth_fade = clamp(depth_fade, 0.0, 1.0);
	
	return depth_fade;
}

void fragment() {
	float time = TIME * speed;
	
	vec3 n1 = texture(noise1, UV + time).rgb;
	vec3 n2 = texture(noise2, UV - time * 0.2).rgb;
	
	vec2 uv_movement = UV * 4f;
	uv_movement += TIME * speed * 4f;
	
	float sum = (n1.r + n2.r) - 1f;
	
	float z_depth = rim(texture(DEPTH_TEXTURE, SCREEN_UV).x);
	float z_pos = rim(FRAGCOORD.z);
	float diff = z_depth - z_pos;
	
	// depth-fade
	float z_depth_fade = calc_depth_fade(texture(DEPTH_TEXTURE, SCREEN_UV).x, PROJECTION_MATRIX, FRAGCOORD, beer_law_factor, _distance, VERTEX);
	float z_fade = rim(FRAGCOORD.z);
	float fade_diff = z_depth_fade - z_fade;
	
	vec4 gradientcolor = mix(color, deep_water, z_depth_fade);
	
	vec2 displacement = vec2(sum * 0.1);
	diff += displacement.x * 70f;
	
	vec4 col = mix(edge_color, gradientcolor, step(edge_scale, diff));
	
	vec4 alpha = texture(SCREEN_TEXTURE, SCREEN_UV + displacement);
	
	
	float fin = 0.0;
	if (sum > 0.0 && sum < 0.4) fin = 0.1;
	if (sum > 0.4 && sum < 0.8) fin = 0.0;
	if (sum > 0.8) fin = 1f;
	
	// konvertier fin in vec3 um
	ALBEDO = vec3(fin) + mix(alpha.rgb, col.rgb, gradientcolor.a);
	
	NORMALMAP = texture(normalmap, uv_movement).rgb;
	
	ROUGHNESS = 0.1;
}"

[sub_resource type="OpenSimplexNoise" id=4]
octaves = 2
period = 80.0
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=5]
seamless = true
noise = SubResource( 4 )

[sub_resource type="OpenSimplexNoise" id=6]
octaves = 2
period = 80.0
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=7]
seamless = true
noise = SubResource( 6 )

[sub_resource type="ShaderMaterial" id=3]
render_priority = -1
shader = SubResource( 8 )
shader_param/speed = 0.005
shader_param/color = Color( 0.0352941, 0.658824, 0.929412, 0.635294 )
shader_param/deep_water = Color( 0.223529, 0.380392, 0.490196, 0.85098 )
shader_param/beer_law_factor = 0.016
shader_param/_distance = -0.2
shader_param/edge_color = Color( 0.858824, 0.960784, 0.956863, 1 )
shader_param/edge_scale = 1.252
shader_param/near = 2.588
shader_param/far = 300.0
shader_param/wave_strength = Vector2( 0.2, 0.12 )
shader_param/wave_frequ = Vector2( 12, 12 )
shader_param/time_factor = Vector2( 1, 2 )
shader_param/noise1 = SubResource( 5 )
shader_param/noise2 = SubResource( 7 )

[sub_resource type="Resource" id=9]
script = ExtResource( 7 )
mode = 0
textures = [ [  ], [  ] ]

[sub_resource type="ProceduralSky" id=12]

[sub_resource type="Environment" id=13]
background_mode = 2
background_sky = SubResource( 12 )
tonemap_mode = 3

[sub_resource type="CylinderMesh" id=14]
height = 9.175

[node name="BaseLevel" type="Spatial"]

[node name="UI" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HUD" parent="UI" instance=ExtResource( 2 )]

[node name="Water" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 64, 0.615, 64 )
mesh = SubResource( 1 )
material/0 = SubResource( 3 )

[node name="PlayerBoat" parent="." instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 57.662, 3.65, 84.882 )

[node name="Camera" type="Camera" parent="PlayerBoat"]
transform = Transform( 1, 0, 0, 0, 0.5, 0.866025, 0, -0.866025, 0.5, 0, 15.0032, 11.4644 )

[node name="HTerrain" type="Spatial" parent="."]
script = ExtResource( 6 )
_terrain_data = ExtResource( 5 )
chunk_size = 32
collision_enabled = true
collision_layer = 1
collision_mask = 1
shader_type = "LowPoly"
custom_shader = null
custom_globalmap_shader = null
texture_set = SubResource( 9 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 13 )

[node name="FishSpawn" parent="." instance=ExtResource( 8 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 71.648, 0, 94.857 )

[node name="FishSpawn2" parent="." instance=ExtResource( 8 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 28.999, 0, 94.857 )
spawn_time_base = 4.0
radius = 15.0

[node name="Jetty" parent="." instance=ExtResource( 3 )]
transform = Transform( 0.684483, 0, -0.729028, 0, 1, 0, 0.729028, 0, 0.684483, 53.4723, 0.1707, 82.7723 )

[node name="HouseRed" parent="." instance=ExtResource( 4 )]
transform = Transform( 0.706292, 0, 0.707921, 0, 1, 0, -0.707921, 0, 0.706292, 60.4392, 1.85729, 74.1896 )

[node name="Shark" parent="." instance=ExtResource( 9 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 39.8969, -0.195338, 79.8121 )

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( -0.00549775, 0.999985, 0, -0.999985, -0.00549775, 0, 0, 0, 1, 44.7463, -0.696912, 73.4735 )
mesh = SubResource( 14 )
material/0 = null
